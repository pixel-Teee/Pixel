#include "{{precompiledHeader}}"//pch

#include "{{moduleFileHeader}}"
#include "{{moduleFileSourceHeader}}"//need parsed header file
#include "rttr/registration.h"
//TODO:need to fix this
#include "Pixel/Renderer/3D/Material/Material.h"
#include "Pixel/Renderer/3D/Material/OutputNode.h"
#include "Pixel/Renderer/3D/Material/InputNode.h"

static void rttr_auto_register_reflection_function_()
{
    //------register------
    using namespace rttr;
    {{#class}}
    registration::class_<{{qualifiedName}}>("{{qualifiedName}}")
    {{#constructor}}
    .constructor<{{&argumentList}}>()
    {{/constructor}}
    {{#field}}
    .property("{{&name}}", &{{&parentQualifiedName}}::{{&name}})
    {{#metaPropertyHaveBrackets}}
    (
    {{/metaPropertyHaveBrackets}}
    {{#metaProperty}}
        metadata("{{&type}}", {{&type}}({{&arguments}})){{^isLast}},{{/isLast}}
    {{/metaProperty}}
    {{#metaPropertyHaveBrackets}}
    )
    {{/metaPropertyHaveBrackets}}
    {{/field}}
    {{#method}}
    .method("{{&name}}", {{#isOverloadAndConst}}select_const{{/isOverloadAndConst}}{{#isOverload}}select_overload<{{&returnType}}({{&argumentList}})>{{/isOverload}}{{#hasBracket}}({{/hasBracket}}&{{&parentQualifiedName}}::{{&name}}{{#hasBracket}}){{/hasBracket}})
    {{#metaPropertyHaveBrackets}}
    (
    {{/metaPropertyHaveBrackets}}
    {{#metaProperty}}
        metadata("{{&type}}", {{&type}}({{&arguments}})){{^isLast}},{{/isLast}}
    {{/metaProperty}}
    {{#metaPropertyHaveBrackets}}
    )
    {{/metaPropertyHaveBrackets}}
    {{/method}}
    {{/class}};
    //------register------

    //------register enumeration------
    {{#enum}}
    registration::enumeration<{{&qualifiedName}}>("{{&qualifiedName}}")
    (
        {{#member}}
        value("{{&key}}", {{&value}}){{^isLast}},{{/isLast}}
        {{/member}}
    );
    {{/enum}}
    //------register enumeration------

    {{#class}}
    type::register_wrapper_converter_for_base_classes<std::shared_ptr<{{&qualifiedName}}>>();
    {{/class}}
}

void AllocateModuleFile{{targetName}}{{moduleFileName}}()
{
    rttr_auto_register_reflection_function_();
}
